{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mon titre... Du texte en gras ou en italique ou bien...... TOTO2211111111111111111111 !!!! Partie A Partie B Fonction indice_min D\u00e9termine l'indice du plus petit \u00e9l\u00e9ment d'un tableau. Entr\u00e9es tab : tableau de nombres n : rien du tout Sortie indice : indice du plus petit \u00e9l\u00e9ment de tab Fichier Python Notebook Jupyter Exercice 1 Exercice 2 Activit\u00e9 Bla bla bla bla bla... Solution R\u00e9ponses au probl\u00e8me.... A retenir Fichier joint Sur le cahier Erreur Important !","title":"Accueil"},{"location":"#mon-titre","text":"Du texte en gras ou en italique ou bien...... TOTO2211111111111111111111 !!!!","title":"Mon titre..."},{"location":"#partie-a","text":"","title":"Partie A"},{"location":"#partie-b","text":"Fonction indice_min D\u00e9termine l'indice du plus petit \u00e9l\u00e9ment d'un tableau. Entr\u00e9es tab : tableau de nombres n : rien du tout Sortie indice : indice du plus petit \u00e9l\u00e9ment de tab Fichier Python Notebook Jupyter Exercice 1 Exercice 2 Activit\u00e9 Bla bla bla bla bla... Solution R\u00e9ponses au probl\u00e8me.... A retenir Fichier joint Sur le cahier Erreur Important !","title":"Partie B"},{"location":"recursivite/","text":"Chapitre 1 : R\u00e9cursivit\u00e9 Partie A - Notion de fonction r\u00e9cursive Le but de ce chapitre est d'introduire le concept de fonction r\u00e9cursive . Il s'agit d'une fonction qui fait appel \u00e0 elle-m\u00eame lors de son ex\u00e9cution. Premier exemple : calcul de x puissance n On suppose que x est un nombre et que n est un entier positif et on souhaite d\u00e9finir une fonction puissance qui calcule x puissance n . Fonction puissance D\u00e9termine la valeur de x puissance n . Entr\u00e9es x : entier ou flottant n : entier positif Sortie val : m\u00eame type que le param\u00e8tre d'entr\u00e9e x Impl\u00e9mentation Version it\u00e9rative Une premi\u00e8re fa\u00e7on de faire est d'utiliser une boucle pour : on obtient une version it\u00e9rative de la fonction. 1 2 3 4 5 def puissance ( x , n ): val = 1 for k in range ( 1 , n + 1 ): val = x * val return val Version r\u00e9cursive En remarquant que \\(x ^ 0=1\\) et que, si \\(n \u2265 1\\) , alors \\(x ^ n = x \\times x ^{n\u22121}\\) , on peut \u00e9crire une version r\u00e9cursive de la fonction. 1 2 3 4 5 def puissance ( x , n ): if n == 0 : return 1 else : return x * puissance ( x , n - 1 ) Ainsi d\u00e9finie, la fonction est une fonction r\u00e9cursive parce qu'elle s'appelle elle-m\u00eame dans le cas o\u00f9 n est non nul. On distingue deux parties dans l'\u00e9criture d'une fonction r\u00e9cursive : un (ou plusieurs) cas r\u00e9sursif(s) , dans lesquels la fonction fait appel \u00e0 elle-m\u00eame avec de nouveaux arguments, un (ou plusieurs) cas de base , qui permet(tent) de mettre un terme aux appels r\u00e9cursifs successifs. Deuxi\u00e8me exemple : calcul de la somme des entiers compris entre a et b On suppose que a est inf\u00e9rieur \u00e0 b et on souhaite d\u00e9finir une fonction somme qui calcule la somme des entiers compris entre a et b . Fonction somme D\u00e9termine la somme des entiers compris entre a et b . Entr\u00e9es a : entier b : entier sup\u00e9rieur \u00e0 a Sortie total : entier Impl\u00e9mentation Version it\u00e9rative 1 2 3 4 5 def somme ( a , b ): total = 0 for k in range ( a , b + 1 ): total = total + k return total Version r\u00e9cursive Deux cas sont \u00e0 envisager : Si a == b (cas de base), cela signifie qu'il y a un seul nombre dans la liste des nombres \u00e0 additionner : le nombre a . On renvoie donc sa valeur. Si a < b (cas r\u00e9cursif), on calcule r\u00e9cursivement la somme des entiers compris entre a+1 et b , on y ajoute la valeur de a et on renvoie le total. 1 2 3 4 5 6 def somme ( a , b ): if a == b : total = a else : total = a + somme ( a + 1 , b ) return total Troisi\u00e8me exemple : calcul du produit des entiers compris entre 1 et n On suppose que n est un entier strictement positif et on souhaite d\u00e9finir une fonction factorielle qui calcule le produit des entiers compris entre 1 et n . Fonction factorielle D\u00e9termine le produit des entiers compris entre 1 et n . Entr\u00e9e n : entier strictement positif Sortie fac : entier Impl\u00e9mentation Version it\u00e9rative 1 2 3 4 5 def factorielle ( n ): fac = 1 for k in range ( 2 , n + 1 ): fac = k * fac return fac Version r\u00e9cursive 1 2 3 4 5 6 def factorielle ( n ): if n == 0 : fac = 1 else : fac = n * factorielle ( n - 1 ) return fac Activit\u00e9 : Figures fractales dessin\u00e9es r\u00e9cursivement Figures fractales dessin\u00e9es r\u00e9cursivement L'objectif de l'activit\u00e9 est de d\u00e9finir des fonctions r\u00e9cursives permettant de tracer, avec le module turtle , des figures fractales telles que le triangle de Sierpi\u0144ski. Notebook \u00e0 t\u00e9l\u00e9charger ici A ECRIRE Partie B - Pile d'appels r\u00e9cursifs Activit\u00e9 : Le compte est bon ! Le compte est bon ! L'objectif de l'activit\u00e9 est de cr\u00e9er un solveur du jeu t\u00e9l\u00e9vis\u00e9 Le compte est bon ! , dont voici un extrait de la version britannique Countdown . Notebook \u00e0 t\u00e9l\u00e9charger ici","title":"R\u00e9cursivit\u00e9"},{"location":"recursivite/#chapitre-1-recursivite","text":"","title":"Chapitre 1 : R\u00e9cursivit\u00e9"},{"location":"recursivite/#partie-a-notion-de-fonction-recursive","text":"Le but de ce chapitre est d'introduire le concept de fonction r\u00e9cursive . Il s'agit d'une fonction qui fait appel \u00e0 elle-m\u00eame lors de son ex\u00e9cution.","title":"Partie A - Notion de fonction r\u00e9cursive"},{"location":"recursivite/#premier-exemple-calcul-de-x-puissance-n","text":"On suppose que x est un nombre et que n est un entier positif et on souhaite d\u00e9finir une fonction puissance qui calcule x puissance n . Fonction puissance D\u00e9termine la valeur de x puissance n . Entr\u00e9es x : entier ou flottant n : entier positif Sortie val : m\u00eame type que le param\u00e8tre d'entr\u00e9e x Impl\u00e9mentation Version it\u00e9rative Une premi\u00e8re fa\u00e7on de faire est d'utiliser une boucle pour : on obtient une version it\u00e9rative de la fonction. 1 2 3 4 5 def puissance ( x , n ): val = 1 for k in range ( 1 , n + 1 ): val = x * val return val Version r\u00e9cursive En remarquant que \\(x ^ 0=1\\) et que, si \\(n \u2265 1\\) , alors \\(x ^ n = x \\times x ^{n\u22121}\\) , on peut \u00e9crire une version r\u00e9cursive de la fonction. 1 2 3 4 5 def puissance ( x , n ): if n == 0 : return 1 else : return x * puissance ( x , n - 1 ) Ainsi d\u00e9finie, la fonction est une fonction r\u00e9cursive parce qu'elle s'appelle elle-m\u00eame dans le cas o\u00f9 n est non nul. On distingue deux parties dans l'\u00e9criture d'une fonction r\u00e9cursive : un (ou plusieurs) cas r\u00e9sursif(s) , dans lesquels la fonction fait appel \u00e0 elle-m\u00eame avec de nouveaux arguments, un (ou plusieurs) cas de base , qui permet(tent) de mettre un terme aux appels r\u00e9cursifs successifs.","title":"Premier exemple : calcul de x puissance n"},{"location":"recursivite/#deuxieme-exemple-calcul-de-la-somme-des-entiers-compris-entre-a-et-b","text":"On suppose que a est inf\u00e9rieur \u00e0 b et on souhaite d\u00e9finir une fonction somme qui calcule la somme des entiers compris entre a et b . Fonction somme D\u00e9termine la somme des entiers compris entre a et b . Entr\u00e9es a : entier b : entier sup\u00e9rieur \u00e0 a Sortie total : entier Impl\u00e9mentation Version it\u00e9rative 1 2 3 4 5 def somme ( a , b ): total = 0 for k in range ( a , b + 1 ): total = total + k return total Version r\u00e9cursive Deux cas sont \u00e0 envisager : Si a == b (cas de base), cela signifie qu'il y a un seul nombre dans la liste des nombres \u00e0 additionner : le nombre a . On renvoie donc sa valeur. Si a < b (cas r\u00e9cursif), on calcule r\u00e9cursivement la somme des entiers compris entre a+1 et b , on y ajoute la valeur de a et on renvoie le total. 1 2 3 4 5 6 def somme ( a , b ): if a == b : total = a else : total = a + somme ( a + 1 , b ) return total","title":"Deuxi\u00e8me exemple : calcul de la somme des entiers compris entre a et b"},{"location":"recursivite/#troisieme-exemple-calcul-du-produit-des-entiers-compris-entre-1-et-n","text":"On suppose que n est un entier strictement positif et on souhaite d\u00e9finir une fonction factorielle qui calcule le produit des entiers compris entre 1 et n . Fonction factorielle D\u00e9termine le produit des entiers compris entre 1 et n . Entr\u00e9e n : entier strictement positif Sortie fac : entier Impl\u00e9mentation Version it\u00e9rative 1 2 3 4 5 def factorielle ( n ): fac = 1 for k in range ( 2 , n + 1 ): fac = k * fac return fac Version r\u00e9cursive 1 2 3 4 5 6 def factorielle ( n ): if n == 0 : fac = 1 else : fac = n * factorielle ( n - 1 ) return fac","title":"Troisi\u00e8me exemple : calcul du produit des entiers compris entre 1 et n"},{"location":"recursivite/#activite-figures-fractales-dessinees-recursivement","text":"Figures fractales dessin\u00e9es r\u00e9cursivement L'objectif de l'activit\u00e9 est de d\u00e9finir des fonctions r\u00e9cursives permettant de tracer, avec le module turtle , des figures fractales telles que le triangle de Sierpi\u0144ski. Notebook \u00e0 t\u00e9l\u00e9charger ici A ECRIRE","title":"Activit\u00e9 : Figures fractales dessin\u00e9es r\u00e9cursivement"},{"location":"recursivite/#partie-b-pile-dappels-recursifs","text":"","title":"Partie B - Pile d'appels r\u00e9cursifs"},{"location":"recursivite/#activite-le-compte-est-bon","text":"Le compte est bon ! L'objectif de l'activit\u00e9 est de cr\u00e9er un solveur du jeu t\u00e9l\u00e9vis\u00e9 Le compte est bon ! , dont voici un extrait de la version britannique Countdown . Notebook \u00e0 t\u00e9l\u00e9charger ici","title":"Activit\u00e9 : Le compte est bon !"}]}